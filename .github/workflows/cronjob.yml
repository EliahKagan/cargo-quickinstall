name: Cronjob

# Run every hour on the hour.
# `actions` is the name of my prototyping branch, so also run this job when I push there.
on:
  schedule:
    - cron: "0 * * * *"
  push:
    branches:
      - actions

jobs:
  build-popular-package:
    name: build-popular-package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2
      - name: find crate to build
        id: find_crate
        env:
          SEMATEXT_API_KEY: ${{ secrets.SEMATEXT_API_KEY }}
          SEMATEXT_APP_TOKEN: ${{ secrets.SEMATEXT_APP_TOKEN }}
        run: |
          set -euo pipefail
          touch .env
          crate=$(./next-unbuilt-package.sh)

          # export `crate` to the top level
          echo "::set-output name=crate_to_build::$crate"
      - name: build package
        env:
          # FIXME: don't make ./build-version.sh do the upload
          # and somehow drop privs so that only artifact uploads
          # can happen or something.
          BINTRAY_USERNAME: ${{ secrets.BINTRAY_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
        run: |
          set -euo pipefail
          crate="${{steps.find_crate.outputs.crate_to_build}}"
          if [[ "$crate" == "cargo-quickinstall" ]]; then
            ./build-version.sh "$crate"
          fi
          # export $TMPDIR to the top level, or pass TMPDIR in as a known location?
      ## NOTE: We might not need to do this job separation with artifacts dance
      ## if we can appropriately sandbox build using docker-within-docker or something.
      # - name: upload an artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: built
      #     path: thing.tar.gz
  # upload-popular-package:
  #   needs: build-popular-package
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: fetch artifact
  #       run: echo "dunno how to do this"
  #     - name: upload artifact
  #       env:
  #         BINTRAY_USERNAME: ${{ secrets.BINTRAY_USERNAME }}
  #         BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
  #       run: echo "TODO - pull out second half of ./build-version.sh"
